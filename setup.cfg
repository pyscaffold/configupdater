[metadata]
name = ConfigUpdater
description = Parser like ConfigParser but for updating configuration files
author = Florian Wilhelm
author_email = florian.wilhelm@gmail.com
license = MIT
license_files = LICENSE.txt
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8
url = https://github.com/pyscaffold/configupdater
# Add here related links, for example:
project_urls =
    Documentation = https://configupdater.readthedocs.io/
    Source = https://github.com/pyscaffold/configupdater/
    Tracker = https://github.com/pyscaffold/configupdater/issues
    Changelog = https://configupdater.readthedocs.io/en/latest/changelog.html
    Download = https://pypi.org/project/configupdater/#files
    Conda-Forge = https://anaconda.org/conda-forge/configupdater
#    Twitter = https://twitter.com/PyScaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 5 - Production/Stable
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Topic :: Software Development :: Libraries :: Python Modules
    Operating System :: OS Independent
    License :: OSI Approved :: MIT License
    Intended Audience :: Developers
    Operating System :: POSIX :: Linux
    Operating System :: Unix
    Operating System :: MacOS
    Operating System :: Microsoft :: Windows

[options]
zip_safe = False
packages = find_namespace:
python_requires = >=3.6
include_package_data = True
package_dir =
    =src

# Add here dependencies of your project (line-separated)
# TODO: Remove conditional dependencies according to `python_requires` above
install_requires =
    importlib-metadata; python_version<"3.8"


[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here test requirements (used by tox)
testing =
    sphinx  # required for system tests
    flake8  # required for system tests
    pytest
    pytest-cov
    pytest-xdist
    pytest-randomly
    # We keep pytest-xdist in the test dependencies, so the developer can
    # easily opt-in for distributed tests by adding, for example, the `-n 15`
    # arguments in the command-line.

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --cov configupdater --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[aliases]
dists = sdist bdist_wheel

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[mypy]
pretty = True
show_error_codes = True
show_error_context = True
show_traceback = True
ignore_missing_imports = True
warn_redundant_casts = True
warn_unused_ignores = True

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.0.1rc2
package = configupdater
extensions =
    no_skeleton
    pre_commit
    cirrus
